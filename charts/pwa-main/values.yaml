# Default values for pwa-main.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image:
  repository: pwa-main
  tag: stable
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

upstream:
  icm: https://pwa-ish-demo.test.intershop.com
  icmBaseURL: https://pwa-ish-demo.test.intershop.com

service:
  type: ClusterIP
  port: 4200

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

environment:
  - name: 'PROMETHEUS'
    value: 'on'
  # enable environment property, if you use the livenessProbe with given healthcheck
  # - name: 'MAX_RESPONSE_TIME'
  #   value: '1500'

livenessProbe:
  {}
  # exec:
  #   command:
  #     - /bin/sh
  #     - -c
  #     - '[ -f /tmp/pwa-ssr.pid ] && ps -A | grep pwa-ssr'
  # initialDelaySeconds: 10
  # periodSeconds: 5

readinessProbe:
  {}
  # httpGet:
  #   path: /health-check
  #   port: 4200
  # initialDelaySeconds: 10
  # periodSeconds: 5

nginx:
  enabled: true

  channels:
    # at least one channel has to be configured
    # configuration details could be found in multi-site-configurations guide
    MULTI_CHANNEL: |
      .+:
        - baseHref: /en
          channel: default
          lang: en_US
        - baseHref: /de
          channel: default
          lang: de_DE
        - baseHref: /fr
          channel: default
          lang: fr_FR

  replicaCount: 1

  image:
    repository: pwa-nginx
    tag: stable
    pullPolicy: IfNotPresent

  nameOverride: ''
  fullnameOverride: ''

  service:
    type: ClusterIP
    port: 4200

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  livenessProbe: {}

  readinessProbe: {}

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: 'true'
    kubernetes.io/ingress.class: nginx
    # traefik.ingress.kubernetes.io/frontend-entry-points: https,http
  paths: ['/']
  hosts:
    - pwa-main.example.com
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
